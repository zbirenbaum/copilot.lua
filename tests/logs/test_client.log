2025-04-04 21:27:05.082 [1] [DEBUG]: active plugin config:
{
  copilot_node_command = "node",
  filetypes = {},
  logger = {
    file = "tests/logs/test_client.log",
    file_log_level = 0,
    log_lsp_messages = false,
    print_log_level = 3,
    trace_lsp = "off",
    trace_lsp_progress = false
  },
  merge_with_user_configs = <function 1>,
  panel = {
    auto_refresh = false,
    enabled = true,
    keymap = {
      accept = "<CR>",
      jump_next = "]]",
      jump_prev = "[[",
      open = "<M-CR>",
      refresh = "gr"
    },
    layout = {
      position = "bottom",
      ratio = 0.4
    }
  },
  root_dir = <function 2>,
  server = {
    type = "nodejs"
  },
  server_opts_overrides = {},
  should_attach = <function 3>,
  suggestion = {
    auto_trigger = false,
    debounce = 15,
    enabled = true,
    hide_during_completion = true,
    keymap = {
      accept = "<M-l>",
      accept_line = false,
      accept_word = false,
      dismiss = "<C-]>",
      next = "<M-]>",
      prev = "<M-[>"
    }
  },
  validate = <function 4>,
  workspace_folders = {}
}
2025-04-04 21:27:05.083 [2] [DEBUG]: active LSP config (may change runtime):
{
  capabilities = {
    general = {
      positionEncodings = { "utf-8", "utf-16", "utf-32" }
    },
    textDocument = {
      callHierarchy = {
        dynamicRegistration = false
      },
      codeAction = {
        codeActionLiteralSupport = {
          codeActionKind = {
            valueSet = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
          }
        },
        dataSupport = true,
        dynamicRegistration = true,
        isPreferredSupport = true,
        resolveSupport = {
          properties = { "edit", "command" }
        }
      },
      codeLens = {
        dynamicRegistration = false,
        resolveSupport = {
          properties = { "command" }
        }
      },
      completion = {
        completionItem = {
          commitCharactersSupport = false,
          deprecatedSupport = true,
          documentationFormat = { "markdown", "plaintext" },
          preselectSupport = false,
          resolveSupport = {
            properties = { "additionalTextEdits", "command" }
          },
          snippetSupport = true,
          tagSupport = {
            valueSet = { 1 }
          }
        },
        completionItemKind = {
          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
        },
        completionList = {
          itemDefaults = { "editRange", "insertTextFormat", "insertTextMode", "data" }
        },
        contextSupport = true,
        dynamicRegistration = false
      },
      declaration = {
        linkSupport = true
      },
      definition = {
        dynamicRegistration = true,
        linkSupport = true
      },
      diagnostic = {
        dynamicRegistration = false
      },
      documentHighlight = {
        dynamicRegistration = false
      },
      documentSymbol = {
        dynamicRegistration = false,
        hierarchicalDocumentSymbolSupport = true,
        symbolKind = {
          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
        }
      },
      foldingRange = {
        dynamicRegistration = false,
        foldingRange = {
          collapsedText = true
        },
        lineFoldingOnly = true
      },
      formatting = {
        dynamicRegistration = true
      },
      hover = {
        contentFormat = { "markdown", "plaintext" },
        dynamicRegistration = true
      },
      implementation = {
        linkSupport = true
      },
      inlayHint = {
        dynamicRegistration = true,
        resolveSupport = {
          properties = { "textEdits", "tooltip", "location", "command" }
        }
      },
      publishDiagnostics = {
        dataSupport = true,
        relatedInformation = true,
        tagSupport = {
          valueSet = { 1, 2 }
        }
      },
      rangeFormatting = {
        dynamicRegistration = true,
        rangesSupport = true
      },
      references = {
        dynamicRegistration = false
      },
      rename = {
        dynamicRegistration = true,
        prepareSupport = true
      },
      semanticTokens = {
        augmentsSyntaxTokens = true,
        dynamicRegistration = false,
        formats = { "relative" },
        multilineTokenSupport = false,
        overlappingTokenSupport = true,
        requests = {
          full = {
            delta = true
          },
          range = false
        },
        serverCancelSupport = false,
        tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
        tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
      },
      signatureHelp = {
        dynamicRegistration = false,
        signatureInformation = {
          activeParameterSupport = true,
          documentationFormat = { "markdown", "plaintext" },
          parameterInformation = {
            labelOffsetSupport = true
          }
        }
      },
      synchronization = {
        didSave = true,
        dynamicRegistration = false,
        willSave = true,
        willSaveWaitUntil = true
      },
      typeDefinition = {
        linkSupport = true
      }
    },
    window = {
      showDocument = {
        support = true
      },
      showMessage = {
        messageActionItem = {
          additionalPropertiesSupport = true
        }
      },
      workDoneProgress = true
    },
    workspace = {
      workspaceFolders = true
    }
  },
  cmd = { "node", "C:\\Users\\antoi\\AppData\\Local\\nvim-data\\lazy\\copilot.lua\\copilot\\js\\language-server.js", "--stdio" },
  get_language_id = <function 1>,
  handlers = {
    PanelSolution = <function 2>,
    PanelSolutionsDone = <function 3>,
    statusNotification = <function 4>
  },
  init_options = {
    editorInfo = {
      name = "Neovim",
      version = "0.11.0"
    },
    editorPluginInfo = {
      name = "copilot.lua",
      version = "1.295.0"
    }
  },
  name = "copilot",
  on_exit = <function 5>,
  on_init = <function 6>,
  root_dir = "C:/Users/antoi/AppData/Local/nvim-data/lazy/copilot.lua",
  settings = {
    telemetry = {
      telemetryLevel = "all"
    }
  },
  workspace_folders = { {
      name = "C:/Users/antoi/AppData/Local/nvim-data/lazy/copilot.lua",
      uri = "file:///C:/Users/antoi/AppData/Local/nvim-data/lazy/copilot.lua"
    } }
}
2025-04-04 21:27:05.085 [3] [TRACE]: attaching to buffer
2025-04-04 21:27:05.095 [4] [TRACE]: buffer attached
2025-04-04 21:27:05.333 [5] [TRACE]: api notify:
"workspace/didChangeConfiguration"
{
  settings = {
    disabledLanguages = { {
        languageId = "."
      }, {
        languageId = "cvs"
      }, {
        languageId = "gitcommit"
      }, {
        languageId = "gitrebase"
      }, {
        languageId = "help"
      }, {
        languageId = "hgcommit"
      }, {
        languageId = "markdown"
      }, {
        languageId = "svn"
      }, {
        languageId = "yaml"
      } },
    enableAutoCompletions = true,
    github = {
      copilot = {
        selectedCompletionModel = ""
      }
    }
  }
}
2025-04-04 21:27:05.334 [7] [TRACE]: api notify:
"$/setTrace"
{
  value = "off"
}
2025-04-04 21:27:05.334 [6] [TRACE]: workspace configuration
{
  settings = {
    disabledLanguages = { {
        languageId = "."
      }, {
        languageId = "cvs"
      }, {
        languageId = "gitcommit"
      }, {
        languageId = "gitrebase"
      }, {
        languageId = "help"
      }, {
        languageId = "hgcommit"
      }, {
        languageId = "markdown"
      }, {
        languageId = "svn"
      }, {
        languageId = "yaml"
      } },
    enableAutoCompletions = true,
    github = {
      copilot = {
        selectedCompletionModel = ""
      }
    }
  }
}
2025-04-04 21:27:05.590 [8] [TRACE]: Status called
2025-04-04 21:27:05.590 [9] [TRACE]: api request:
"checkStatus"
{}
2025-04-04 21:27:06.956 [10] [INFO]: Status:
Online
Enabled
2025-04-04 21:27:06.098 [12] [TRACE]: suggestion context
2025-04-04 21:27:06.098 [13] [TRACE]: suggestion new context
{}
2025-04-04 21:27:06.100 [15] [TRACE]: suggestion new context
{}
2025-04-04 21:27:06.100 [14] [TRACE]: suggestion context
